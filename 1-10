Level 0 -> Level 1
use ls command to list out the available files
use cat command to write out the data inside
username for level 1 : bandit1
password for level 1 : boJ9jbbUNNfktd78OOpsqOltutMc3MY1

Level 1 -> Level 2
use ls command to list out the available files
Note: When cat sees the string - as a filename, it treats it as a synonym for stdin. To get around this, you need to alter the string that cat sees in such a way that it still refers to a file called -. The usual way of doing this is to prefix the filename with a path - ./-, or /home/Tim/-. This technique is also used to get around similar issues where command line options clash with filenames, so a file referred to as ./-e does not appear as the -e command line option to a program, for example.

username for level 2 : bandit2
password for level 2 : CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

Level 2 -> Level 3
use ls command to list out the available files
use the cat command with "\"[backslash] before spaces in the file name.

username for level 3 : bandit3
password for level 3 : UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

Level 3 -> Level 4
use ls command to list out the available directories, get into inhere directory using cd command
use the cat command with ./.hidden to print out the output key

username for level 4 : bandit4
password for level 4 : pIwrPrtPN36QITSp3EQaw936yaFoFgAB

*/
File command
┌───────────────┬───────────────────────────────────────────┐
│ Option        │ Explanation                               │
├───────────────┼───────────────────────────────────────────┤
│ .    OR    ./ │ Refer to the Current Working Directory    │
|---------------|-------------------------------------------|
│ -type f       │ File is of type : regular file            │
|---------------|-------------------------------------------|
│ -readable     │ Matches files which are readable.         │
|---------------|-------------------------------------------|
│ -executable   │ Matches  files which are executable   &   │
│               │ directories which are searchable          │
|---------------|-------------------------------------------|
│ ! -executable │ Matches  files that are NOT executable &  │
│               │ directories which are NOT searchable      │
|---------------|-------------------------------------------|
│ -size 1033c   │ File uses 1033 units of space.            │
│               │ `c` refer to bytes.                       │
└───────────────┴───────────────────────────────────────────┘
*/

Level 4 -> Level 5
use ls command to list out the available directories, get into inhere directory using cd command and list out all the files using ls command
use the file command
file ./* lists all the files and the data type inside

username for level 5 : bandit5
password for level 5 : koReBOKuIDDepwhWk7jZC0RTdopnAYKh

Level 5 -> Level 6
use ls command to list out the available directories, get into inhere directory using cd command and list out all the files using ls command
use the find command to find the file with size 1033 bytes[find . -size 1033c]
Check the content of the output with file command and ls -la which specifies the permissions of the files

alternative command:  find ./ -type f -readable ! -executable -size 1033c

username for level 6 : bandit6
password for level 6 : DXjZPULLxYr17uwoI01bNLQbtFemEgo7

Level 6 -> Level 7
use ls command to list out the available directories, get into inhere directory using cd command and list out all the files using ls command
command: find ./ -size 33c -user bandit7 -group bandit6 
append 2>/dev/null for removing all the files with permission denied
use cat command to read the password

username for level 7 : bandit7
password for level 7 : HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

/*
┌─────────┬────────────────────────────────────────────────────────┐
│ Command │                      Explanation                       │
├─────────┼────────────────────────────────────────────────────────┤
│ grep    │ Print lines matching a pattern                         │
│ sort    │ Sort lines of text files                               │
│ uniq    │ Report or omit repeated lines                          │
│ strings │ Print the strings of printable characters in files     │
│ base64  │ base64 encode/decode data and print to standard output │
│ tr      │ Translate or delete characters                         │
│ tar     │ The GNU version of the tar archiving utility           │
│ gzip    │ Compress or expand files                               │
│ bzip2   │ A block-sorting file compressor, v1.0.6                │
│ xxd     │ Make a hexdump or do the reverse                       │
└─────────┴────────────────────────────────────────────────────────┘
*/
Level 7 -> Level 8
use ls command to list out the available files
grep is used to identify the millionth sentence and awk separates the content, NF is used to print the last word
command: cat  data.txt | grep millionth |  awk '{print $NF}' 
Other reference: https://ryanstutorials.net/linuxtutorial/filters.php


username for level 8 : bandit8
password for level 8 : cvX2JJa4CFALtqS87jk27qwqGhBM9plV


Level 8 -> Level 9
use ls command to list out the available files
command: sort data.txt | uniq -u
The reason we need to use sort is because the uniq command checks the line with previous and the next line. -u is to print the unique line.


username for level 9 : bandit9
password for level 9 : UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

Level 9 -> Level 10
use ls command to list out the available files
command:  strings data.txt | grep "=="
Since the data file is a binary file we need to use strings to make it human readable. And also it has been mentioned that the string contains many "==" preceeding the key, we use grep to identify the string.


username for level 10 : bandit10
password for level 10 : truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
